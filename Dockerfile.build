# --- Stage 1: Build frontend ---
FROM node:23.10.0-alpine AS frontend-builder

WORKDIR /app

# Copy package.json and package-lock.json
COPY frontend/package*.json ./

# Install dependencies
RUN npm ci

# Copy the source code
COPY frontend/ ./

# Build the app
RUN npm run build

# --- Stage 2: Build backend ---

FROM golang:1.23.2-alpine AS backend-builder

WORKDIR /app

COPY /backend/go.mod /backend/go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY backend/ ./

# Remove local static files that go copied
RUN rm -rf static

RUN apk add --no-cache gcc musl-dev

# Build backend
RUN CGO_ENABLED=1 GOOS=linux go build -o bin/server

# --- Stage 3: Copy static files from frontend to backend ---

FROM alpine:latest

WORKDIR /app

COPY --from=frontend-builder /backend/static ./static

# --- Stage 4: Get the executable & database and run! ---

COPY --from=backend-builder /app/bin/server /app/server

COPY /backend/database /app/database

RUN ls

EXPOSE 8080

# Run server
CMD [ "/app/server" ]

