# --- Stage 1: Build frontend ---
FROM node:23.10.0-alpine AS frontend-builder

WORKDIR /app

# Copy package.json and package-lock.json
COPY frontend/package*.json ./

# Install dependencies
RUN npm ci

# Copy the source code
COPY frontend/ ./

# Build the app
RUN npm run build

# --- Stage 2: Build backend ---

FROM golang:1.23.2-alpine AS backend-builder

WORKDIR /app

# Copy source code
COPY backend/ ./

# Download dependencies
RUN go mod download

# Remove local static files that go copied
RUN rm -rf static

# Install C compiler
RUN apk add --no-cache gcc musl-dev

# Build backend
RUN CGO_ENABLED=1 GOOS=linux go build -o bin/server

# --- Stage 3: Run server! ---

FROM alpine:latest

WORKDIR /app

# Copy static files from frontend-builder
COPY --from=frontend-builder /backend/static ./static

# Copy binary from backend-builder
COPY --from=backend-builder /app/bin/server /app/server

# Copy database files from source
COPY /backend/database /app/database

EXPOSE 8080

# Set GIN to release
ENV GIN_MODE=release

# Run server
CMD [ "/app/server" ]

